name: OTTSR Build & Release

on:
  push:
    branches:
      - main       # Auto-build on commits to main
  workflow_dispatch: # Optional manual trigger

permissions:
  contents: write

env:
  # Configurable major/minor version
  VERSION_MAJOR: 0
  VERSION_MINOR: 0

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up MSVC environment
        shell: cmd
        run: call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"

      - name: Build OTTSR
        shell: cmd
        run: |
          cl /nologo /O2 /GL /Gy /arch:AVX2 /fp:fast /MD ottsr.c /Fe:ottsr.exe ^
            user32.lib kernel32.lib shell32.lib winmm.lib opengl32.lib glu32.lib gdi32.lib comctl32.lib psapi.lib /link /LTCG

      - name: Determine next patch version
        id: version
        shell: bash
        run: |
          last=$(gh release list --limit 1 --json tagName -q '.[0].tagName' || echo "")
          if [[ $last =~ ([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
            patch=$((patch+1))
          else
            major=${{ env.VERSION_MAJOR }}
            minor=${{ env.VERSION_MINOR }}
            patch=1
          fi
          echo "RELEASE_TAG=${major}.${minor}.${patch}" >> $GITHUB_ENV

      - name: Generate README for release
        shell: bash
        run: |
          cat > README_RELEASE.md <<EOL
# OTTSR v${{ env.RELEASE_TAG }}

**OTTSR** (Optimized Time-Tracking for Study Routines) release **${{ env.RELEASE_TAG }}**

Early development version â€“ UI may be incomplete.

## Features
- Pomodoro-style study/break cycles
- Config file support
- Native Win32 app, dependency-free

## Build
Built with MSVC on Windows.

## Installation
Download **ottsr.exe** from this release and run directly.
EOL

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: "OTTSR v${{ env.RELEASE_TAG }}"
          files: ottsr.exe,README_RELEASE.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
